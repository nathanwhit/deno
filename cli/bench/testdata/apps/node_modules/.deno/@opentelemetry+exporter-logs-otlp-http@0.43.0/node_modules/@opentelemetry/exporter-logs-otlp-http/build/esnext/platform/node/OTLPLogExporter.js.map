{"version":3,"file":"OTLPLogExporter.js","sourceRoot":"","sources":["../../../../src/platform/node/OTLPLogExporter.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;AAQH,OAAO,EAAE,MAAM,EAAE,YAAY,EAAE,MAAM,qBAAqB,CAAC;AAC3D,OAAO,EAAE,oBAAoB,EAAE,MAAM,mCAAmC,CAAC;AACzE,OAAO,EAAE,8BAA8B,EAAE,MAAM,iCAAiC,CAAC;AAEjF,OAAO,EAAE,aAAa,EAAE,MAAM,WAAW,CAAC;AAE1C;;GAEG;AACH,MAAM,OAAO,eACX,SAAQ,oBAAkE;IAG1E,YAAY,SAAqC,EAAE;QACjD,4CAA4C;QAC5C,KAAK,iBACH,aAAa,EAAE,MAAM,EAAE,CAAC,+BAA+B,IACpD,MAAM,EACT,CAAC;QACH,IAAI,CAAC,OAAO,mCACP,IAAI,CAAC,OAAO,GACZ,YAAY,CAAC,uBAAuB,CACrC,MAAM,EAAE,CAAC,+BAA+B,CACzC,CACF,CAAC;IACJ,CAAC;IAED,OAAO,CAAC,UAA+B;QACrC,OAAO,8BAA8B,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;IAC1D,CAAC;IAED,aAAa,CAAC,MAAkC;QAC9C,OAAO,aAAa,CAAC,MAAM,CAAC,CAAC;IAC/B,CAAC;CACF","sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type {\n  ReadableLogRecord,\n  LogRecordExporter,\n} from '@opentelemetry/sdk-logs';\nimport type { OTLPExporterNodeConfigBase } from '@opentelemetry/otlp-exporter-base';\nimport type { IExportLogsServiceRequest } from '@opentelemetry/otlp-transformer';\nimport { getEnv, baggageUtils } from '@opentelemetry/core';\nimport { OTLPExporterNodeBase } from '@opentelemetry/otlp-exporter-base';\nimport { createExportLogsServiceRequest } from '@opentelemetry/otlp-transformer';\n\nimport { getDefaultUrl } from '../config';\n\n/**\n * Collector Logs Exporter for Node\n */\nexport class OTLPLogExporter\n  extends OTLPExporterNodeBase<ReadableLogRecord, IExportLogsServiceRequest>\n  implements LogRecordExporter\n{\n  constructor(config: OTLPExporterNodeConfigBase = {}) {\n    // load  OTEL_EXPORTER_OTLP_LOGS_TIMEOUT env\n    super({\n      timeoutMillis: getEnv().OTEL_EXPORTER_OTLP_LOGS_TIMEOUT,\n      ...config,\n    });\n    this.headers = {\n      ...this.headers,\n      ...baggageUtils.parseKeyPairsIntoRecord(\n        getEnv().OTEL_EXPORTER_OTLP_LOGS_HEADERS\n      ),\n    };\n  }\n\n  convert(logRecords: ReadableLogRecord[]): IExportLogsServiceRequest {\n    return createExportLogsServiceRequest(logRecords, true);\n  }\n\n  getDefaultUrl(config: OTLPExporterNodeConfigBase): string {\n    return getDefaultUrl(config);\n  }\n}\n"]}