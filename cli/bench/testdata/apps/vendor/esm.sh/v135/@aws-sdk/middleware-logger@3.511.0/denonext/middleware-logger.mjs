/* esm.sh - esbuild bundle(@aws-sdk/middleware-logger@3.511.0) denonext production */
var m=()=>(u,t)=>async i=>{try{let e=await u(i),{clientName:o,commandName:n,logger:r,dynamoDbDocumentClientOptions:a={}}=t,{overrideInputFilterSensitiveLog:p,overrideOutputFilterSensitiveLog:s}=a,l=p??t.inputFilterSensitiveLog,g=s??t.outputFilterSensitiveLog,{$metadata:d,...c}=e.output;return r?.info?.({clientName:o,commandName:n,input:l(i.input),output:g(c),metadata:d}),e}catch(e){let{clientName:o,commandName:n,logger:r,dynamoDbDocumentClientOptions:a={}}=t,{overrideInputFilterSensitiveLog:p}=a,s=p??t.inputFilterSensitiveLog;throw r?.error?.({clientName:o,commandName:n,input:s(i.input),error:e,metadata:e.$metadata}),e}},v={name:"loggerMiddleware",tags:["LOGGER"],step:"initialize",override:!0},L=u=>({applyToStack:t=>{t.add(m(),v)}});export{L as getLoggerPlugin,m as loggerMiddleware,v as loggerMiddlewareOptions};
//# sourceMappingURL=middleware-logger.mjs.map