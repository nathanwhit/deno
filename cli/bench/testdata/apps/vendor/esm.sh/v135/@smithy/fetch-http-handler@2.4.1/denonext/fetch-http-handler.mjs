/* esm.sh - esbuild bundle(@smithy/fetch-http-handler@2.4.1) denonext production */
import{HttpResponse as b}from"/v135/@smithy/protocol-http@3.1.1/denonext/protocol-http.mjs";import{buildQueryString as v}from"/v135/@smithy/querystring-builder@2.1.1/denonext/querystring-builder.mjs";function w(o=0){return new Promise((e,t)=>{o&&setTimeout(()=>{let r=new Error(`Request did not complete within ${o} ms`);r.name="TimeoutError",t(r)},o)})}var E={supported:typeof Request<"u"&&"keepalive"in new Request("https://[::1]")},y=class o{static create(e){return typeof e?.handle=="function"?e:new o(e)}constructor(e){typeof e=="function"?this.configProvider=e().then(t=>t||{}):(this.config=e??{},this.configProvider=Promise.resolve(this.config))}destroy(){}async handle(e,{abortSignal:t}={}){this.config||(this.config=await this.configProvider);let r=this.config.requestTimeout,a=this.config.keepAlive===!0;if(t?.aborted){let n=new Error("Request aborted");return n.name="AbortError",Promise.reject(n)}let s=e.path,i=v(e.query||{});i&&(s+=`?${i}`),e.fragment&&(s+=`#${e.fragment}`);let h="";if(e.username!=null||e.password!=null){let n=e.username??"",f=e.password??"";h=`${n}:${f}@`}let{port:m,method:u}=e,g=`${e.protocol}//${h}${e.hostname}${m?`:${m}`:""}${s}`,l={body:u==="GET"||u==="HEAD"?void 0:e.body,headers:new Headers(e.headers),method:u};typeof AbortController<"u"&&(l.signal=t),E.supported&&(l.keepalive=a);let R=new Request(g,l),p=[fetch(R).then(n=>{let f=n.headers,d={};for(let c of f.entries())d[c[0]]=c[1];return n.body!=null?{response:new b({headers:d,reason:n.statusText,statusCode:n.status,body:n.body})}:n.blob().then(c=>({response:new b({headers:d,reason:n.statusText,statusCode:n.status,body:c})}))}),w(r)];return t&&p.push(new Promise((n,f)=>{t.onabort=()=>{let d=new Error("Request aborted");d.name="AbortError",f(d)}})),Promise.race(p)}updateHttpClientConfig(e,t){this.config=void 0,this.configProvider=this.configProvider.then(r=>(r[e]=t,r))}httpHandlerConfigs(){return this.config??{}}};import{fromBase64 as P}from"/v135/@smithy/util-base64@2.1.1/denonext/util-base64.mjs";var q=o=>typeof Blob=="function"&&o instanceof Blob?A(o):$(o);async function A(o){let e=await x(o),t=P(e);return new Uint8Array(t)}async function $(o){let e=new Uint8Array(0),t=o.getReader(),r=!1;for(;!r;){let{done:a,value:s}=await t.read();if(s){let i=e;e=new Uint8Array(i.length+s.length),e.set(i),e.set(s,i.length)}r=a}return e}function x(o){return new Promise((e,t)=>{let r=new FileReader;r.onloadend=()=>{if(r.readyState!==2)return t(new Error("Reader aborted too early"));let a=r.result??"",s=a.indexOf(","),i=s>-1?s+1:a.length;e(a.substring(i))},r.onabort=()=>t(new Error("Read aborted")),r.onerror=()=>t(r.error),r.readAsDataURL(o)})}export{y as FetchHttpHandler,E as keepAliveSupport,q as streamCollector};
//# sourceMappingURL=fetch-http-handler.mjs.map