/* esm.sh - esbuild bundle(@smithy/eventstream-serde-browser@2.1.1) denonext production */
import{EventStreamMarshaller as i}from"/v135/@smithy/eventstream-serde-universal@2.1.1/denonext/eventstream-serde-universal.mjs";var o=a=>({[Symbol.asyncIterator]:async function*(){let e=a.getReader();try{for(;;){let{done:r,value:t}=await e.read();if(r)return;yield t}}finally{e.releaseLock()}}}),n=a=>{let e=a[Symbol.asyncIterator]();return new ReadableStream({async pull(r){let{done:t,value:s}=await e.next();if(t)return r.close();r.enqueue(s)}})};var l=class{constructor({utf8Encoder:e,utf8Decoder:r}){this.universalMarshaller=new i({utf8Decoder:r,utf8Encoder:e})}deserialize(e,r){let t=m(e)?o(e):e;return this.universalMarshaller.deserialize(t,r)}serialize(e,r){let t=this.universalMarshaller.serialize(e,r);return typeof ReadableStream=="function"?n(t):t}},m=a=>typeof ReadableStream=="function"&&a instanceof ReadableStream;var S=a=>new l(a);export{l as EventStreamMarshaller,S as eventStreamSerdeProvider,n as iterableToReadableStream,o as readableStreamtoIterable};
//# sourceMappingURL=eventstream-serde-browser.mjs.map