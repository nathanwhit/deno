/* esm.sh - esbuild bundle(@smithy/middleware-endpoint@2.4.1) denonext production */
var u=async t=>{let n=t?.Bucket||"";if(typeof t.Bucket=="string"&&(t.Bucket=n.replace(/#/g,encodeURIComponent("#")).replace(/\?/g,encodeURIComponent("?"))),v(n)){if(t.ForcePathStyle===!0)throw new Error("Path-style addressing cannot be used with ARN buckets")}else(!S(n)||n.indexOf(".")!==-1&&!String(t.Endpoint).startsWith("http:")||n.toLowerCase()!==n||n.length<3)&&(t.ForcePathStyle=!0);return t.DisableMultiRegionAccessPoints&&(t.disableMultiRegionAccessPoints=!0,t.DisableMRAP=!0),t},E=/^[a-z0-9][a-z0-9\.\-]{1,61}[a-z0-9]$/,P=/(\d+\.){3}\d+/,w=/\.\./;var S=t=>E.test(t)&&!P.test(t)&&!w.test(t),v=t=>{let[n,e,r,o,s,i]=t.split(":"),c=n==="arn"&&t.split(":").length>=6,a=[n,e,r,s,i].filter(Boolean).length===5;if(c&&!a)throw new Error(`Invalid ARN: ${t} was an invalid ARN.`);return n==="arn"&&!!e&&!!r&&!!s&&!!i};var l=(t,n,e)=>{let r=async()=>{let o=e[t]??e[n];return typeof o=="function"?o():o};return t==="credentialScope"||n==="CredentialScope"?async()=>{let o=typeof e.credentials=="function"?await e.credentials():e.credentials;return o?.credentialScope??o?.CredentialScope}:t==="endpoint"||n==="endpoint"?async()=>{let o=await r();if(o&&typeof o=="object"){if("url"in o)return o.url.href;if("hostname"in o){let{protocol:s,hostname:i,port:c,path:a}=o;return`${s}//${i}${c?":"+c:""}${a}`}}return o}:r};var g=async t=>{};import{parseUrl as m}from"/v135/@smithy/url-parser@2.1.1/denonext/url-parser.mjs";var p=t=>typeof t=="object"?"url"in t?m(t.url):t:m(t);var f=async(t,n,e,r)=>{if(!e.endpoint){let i=await g(e.serviceId||"");i&&(e.endpoint=()=>Promise.resolve(p(i)))}let o=await x(t,n,e);if(typeof e.endpointProvider!="function")throw new Error("config.endpointProvider is not set.");return e.endpointProvider(o,r)},x=async(t,n,e)=>{let r={},o=n?.getEndpointParameterInstructions?.()||{};for(let[s,i]of Object.entries(o))switch(i.type){case"staticContextParams":r[s]=i.value;break;case"contextParams":r[s]=t[i.name];break;case"clientContextParams":case"builtInParams":r[s]=await l(i.name,s,e)();break;default:throw new Error("Unrecognized endpoint parameter instruction: "+JSON.stringify(i))}return Object.keys(o).length===0&&Object.assign(r,e),String(e.serviceId).toLowerCase()==="s3"&&await u(r),r};import{getSmithyContext as R}from"/v135/@smithy/util-middleware@2.1.1/denonext/util-middleware.mjs";var h=({config:t,instructions:n})=>(e,r)=>async o=>{let s=await f(o.input,{getEndpointParameterInstructions(){return n}},{...t},r);r.endpointV2=s,r.authSchemes=s.properties?.authSchemes;let i=r.authSchemes?.[0];if(i){r.signing_region=i.signingRegion,r.signing_service=i.signingName;let a=R(r)?.selectedHttpAuthScheme?.httpAuthOption;a&&(a.signingProperties=Object.assign(a.signingProperties||{},{signing_region:i.signingRegion,signingRegion:i.signingRegion,signing_service:i.signingName,signingName:i.signingName,signingRegionSet:i.signingRegionSet},i.properties))}return e({...o})};import{serializerMiddlewareOption as y}from"/v135/@smithy/middleware-serde@2.1.1/denonext/middleware-serde.mjs";var A={step:"serialize",tags:["ENDPOINT_PARAMETERS","ENDPOINT_V2","ENDPOINT"],name:"endpointV2Middleware",override:!0,relation:"before",toMiddleware:y.name},W=(t,n)=>({applyToStack:e=>{e.addRelativeTo(h({config:t,instructions:n}),A)}});import{normalizeProvider as d}from"/v135/@smithy/util-middleware@2.1.1/denonext/util-middleware.mjs";var X=t=>{let n=t.tls??!0,{endpoint:e}=t,r=e!=null?async()=>p(await d(e)()):void 0;return{...t,endpoint:r,tls:n,isCustomEndpoint:!!e,useDualstackEndpoint:d(t.useDualstackEndpoint??!1),useFipsEndpoint:d(t.useFipsEndpoint??!1)}};export{h as endpointMiddleware,A as endpointMiddlewareOptions,f as getEndpointFromInstructions,W as getEndpointPlugin,X as resolveEndpointConfig,x as resolveParams,p as toEndpointV1};
//# sourceMappingURL=middleware-endpoint.mjs.map