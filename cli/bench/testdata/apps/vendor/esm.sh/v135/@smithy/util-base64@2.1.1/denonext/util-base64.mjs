/* esm.sh - esbuild bundle(@smithy/util-base64@2.1.1) denonext production */
var l={},h=new Array(64);for(let t=0,e=65,r=90;t+e<=r;t++){let i=String.fromCharCode(t+e);l[i]=t,h[t]=i}for(let t=0,e=97,r=122;t+e<=r;t++){let i=String.fromCharCode(t+e),o=t+26;l[i]=o,h[o]=i}for(let t=0;t<10;t++){l[t.toString(10)]=t+52;let e=t.toString(10),r=t+52;l[e]=r,h[r]=e}l["+"]=62;h[62]="+";l["/"]=63;h[63]="/";var c=6,b=8,y=63;var C=t=>{let e=t.length/4*3;t.slice(-2)==="=="?e-=2:t.slice(-1)==="="&&e--;let r=new ArrayBuffer(e),i=new DataView(r);for(let o=0;o<t.length;o+=4){let s=0,n=0;for(let a=o,m=o+3;a<=m;a++)if(t[a]!=="="){if(!(t[a]in l))throw new TypeError(`Invalid character ${t[a]} in base64 string.`);s|=l[t[a]]<<(m-a)*c,n+=c}else s>>=c;let f=o/4*3;s>>=n%b;let g=Math.floor(n/b);for(let a=0;a<g;a++){let m=(g-a-1)*b;i.setUint8(f+a,(s&255<<m)>>m)}}return new Uint8Array(r)};function w(t){let e="";for(let r=0;r<t.length;r+=3){let i=0,o=0;for(let n=r,f=Math.min(r+3,t.length);n<f;n++)i|=t[n]<<(f-n-1)*b,o+=b;let s=Math.ceil(o/c);i<<=s*c-o;for(let n=1;n<=s;n++){let f=(s-n)*c;e+=h[(i&y<<f)>>f]}e+="==".slice(0,4-s)}return e}export{C as fromBase64,w as toBase64};
//# sourceMappingURL=util-base64.mjs.map