/* esm.sh - esbuild bundle(@smithy/util-waiter@2.1.1) denonext production */
var u=r=>new Promise(t=>setTimeout(t,r*1e3));var w={minDelay:2,maxDelay:120},e;(function(r){r.ABORTED="ABORTED",r.FAILURE="FAILURE",r.SUCCESS="SUCCESS",r.RETRY="RETRY",r.TIMEOUT="TIMEOUT"})(e||(e={}));var S=r=>{if(r.state===e.ABORTED){let t=new Error(`${JSON.stringify({...r,reason:"Request was aborted"})}`);throw t.name="AbortError",t}else if(r.state===e.TIMEOUT){let t=new Error(`${JSON.stringify({...r,reason:"Waiter has timed out"})}`);throw t.name="TimeoutError",t}else if(r.state!==e.SUCCESS)throw new Error(`${JSON.stringify({result:r})}`);return r};var b=(r,t,i,o)=>{if(o>i)return t;let a=r*2**(o-1);return C(r,a)},C=(r,t)=>r+Math.random()*(t-r),c=async({minDelay:r,maxDelay:t,maxWaitTime:i,abortController:o,client:a,abortSignal:x},n,m)=>{let{state:s,reason:h}=await m(a,n);if(s!==e.RETRY)return{state:s,reason:h};let f=1,D=Date.now()+i*1e3,y=Math.log(t/r)/Math.log(2)+1;for(;;){if(o?.signal?.aborted||x?.aborted)return{state:e.ABORTED};let l=b(r,t,y,f);if(Date.now()+l*1e3>D)return{state:e.TIMEOUT};await u(l);let{state:E,reason:R}=await m(a,n);if(E!==e.RETRY)return{state:E,reason:R};f+=1}};var g=r=>{if(r.maxWaitTime<1)throw new Error("WaiterConfiguration.maxWaitTime must be greater than 0");if(r.minDelay<1)throw new Error("WaiterConfiguration.minDelay must be greater than 0");if(r.maxDelay<1)throw new Error("WaiterConfiguration.maxDelay must be greater than 0");if(r.maxWaitTime<=r.minDelay)throw new Error(`WaiterConfiguration.maxWaitTime [${r.maxWaitTime}] must be greater than WaiterConfiguration.minDelay [${r.minDelay}] for this waiter`);if(r.maxDelay<r.minDelay)throw new Error(`WaiterConfiguration.maxDelay [${r.maxDelay}] must be greater than WaiterConfiguration.minDelay [${r.minDelay}] for this waiter`)};var T=async r=>new Promise(t=>{r.onabort=()=>t({state:e.ABORTED})}),J=async(r,t,i)=>{let o={...w,...r};g(o);let a=[c(o,t,i)];return r.abortController&&a.push(T(r.abortController.signal)),r.abortSignal&&a.push(T(r.abortSignal)),Promise.race(a)};export{e as WaiterState,S as checkExceptions,J as createWaiter,w as waiterServiceDefaults};
//# sourceMappingURL=util-waiter.mjs.map