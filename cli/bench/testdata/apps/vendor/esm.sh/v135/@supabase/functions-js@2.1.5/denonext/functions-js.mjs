/* esm.sh - esbuild bundle(@supabase/functions-js@2.1.5) denonext production */
var F=i=>{let t;return i?t=i:typeof fetch>"u"?t=(...e)=>import("/v135/@supabase/node-fetch@2.6.14/denonext/node-fetch.mjs").then(({default:r})=>r(...e)):t=fetch,(...e)=>t(...e)};var p=class extends Error{constructor(t,e="FunctionsError",r){super(t),this.name=e,this.context=r}},h=class extends p{constructor(t){super("Failed to send a request to the Edge Function","FunctionsFetchError",t)}},y=class extends p{constructor(t){super("Relay Error invoking the Edge Function","FunctionsRelayError",t)}},x=class extends p{constructor(t){super("Edge Function returned a non-2xx status code","FunctionsHttpError",t)}};var w=function(i,t,e,r){function a(c){return c instanceof e?c:new e(function(n){n(c)})}return new(e||(e=Promise))(function(c,n){function f(s){try{o(r.next(s))}catch(u){n(u)}}function l(s){try{o(r.throw(s))}catch(u){n(u)}}function o(s){s.done?c(s.value):a(s.value).then(f,l)}o((r=r.apply(i,t||[])).next())})},m=class{constructor(t,{headers:e={},customFetch:r}={}){this.url=t,this.headers=e,this.fetch=F(r)}setAuth(t){this.headers.Authorization=`Bearer ${t}`}invoke(t,e={}){var r;return w(this,void 0,void 0,function*(){try{let{headers:a,method:c,body:n}=e,f={},l;n&&(a&&!Object.prototype.hasOwnProperty.call(a,"Content-Type")||!a)&&(typeof Blob<"u"&&n instanceof Blob||n instanceof ArrayBuffer?(f["Content-Type"]="application/octet-stream",l=n):typeof n=="string"?(f["Content-Type"]="text/plain",l=n):typeof FormData<"u"&&n instanceof FormData?l=n:(f["Content-Type"]="application/json",l=JSON.stringify(n)));let o=yield this.fetch(`${this.url}/${t}`,{method:c||"POST",headers:Object.assign(Object.assign(Object.assign({},f),this.headers),a),body:l}).catch(E=>{throw new h(E)}),s=o.headers.get("x-relay-error");if(s&&s==="true")throw new y(o);if(!o.ok)throw new x(o);let u=((r=o.headers.get("Content-Type"))!==null&&r!==void 0?r:"text/plain").split(";")[0].trim(),d;return u==="application/json"?d=yield o.json():u==="application/octet-stream"?d=yield o.blob():u==="multipart/form-data"?d=yield o.formData():d=yield o.text(),{data:d,error:null}}catch(a){return{data:null,error:a}}})}};export{m as FunctionsClient,p as FunctionsError,h as FunctionsFetchError,x as FunctionsHttpError,y as FunctionsRelayError};
//# sourceMappingURL=functions-js.mjs.map