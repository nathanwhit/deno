/* esm.sh - esbuild bundle(parse-srcset@1.0.2) esnext production */
var q=Object.create;var N=Object.defineProperty;var y=Object.getOwnPropertyDescriptor;var B=Object.getOwnPropertyNames;var G=Object.getPrototypeOf,H=Object.prototype.hasOwnProperty;var J=(r,e)=>()=>(e||r((e={exports:{}}).exports,e),e.exports),K=(r,e)=>{for(var s in e)N(r,s,{get:e[s],enumerable:!0})},I=(r,e,s,C)=>{if(e&&typeof e=="object"||typeof e=="function")for(let u of B(e))!H.call(r,u)&&u!==s&&N(r,u,{get:()=>e[u],enumerable:!(C=y(e,u))||C.enumerable});return r},h=(r,e,s)=>(I(r,e,"default"),s&&I(s,e,"default")),F=(r,e,s)=>(s=r!=null?q(G(r)):{},I(e||!r||!r.__esModule?N(s,"default",{value:r,enumerable:!0}):s,r));var $=J((V,b)=>{(function(r,e){typeof define=="function"&&define.amd?define([],e):typeof b=="object"&&b.exports?b.exports=e():r.parseSrcset=e()})(V,function(){return function(r){function e(i){return i===" "||i==="	"||i===`
`||i==="\f"||i==="\r"}function s(i){var f,l=i.exec(r.substring(c));if(l)return f=l[0],c+=f.length,f}for(var C=r.length,u=/^[ \t\n\r\u000c]+/,k=/^[, \t\n\r\u000c]+/,z=/^[^ \t\n\r\u000c]+/,O=/[,]+$/,A=/^\d+$/,P=/^-?(?:[0-9]+|[0-9]*\.[0-9]+)(?:[eE][+-]?[0-9]+)?$/,x,a,t,o,n,c=0,E=[];;){if(s(k),c>=C)return E;x=s(z),a=[],x.slice(-1)===","?(x=x.replace(O,""),m()):T()}function T(){for(s(u),t="",o="in descriptor";;){if(n=r.charAt(c),o==="in descriptor")if(e(n))t&&(a.push(t),t="",o="after descriptor");else if(n===","){c+=1,t&&a.push(t),m();return}else if(n==="(")t=t+n,o="in parens";else if(n===""){t&&a.push(t),m();return}else t=t+n;else if(o==="in parens")if(n===")")t=t+n,o="in descriptor";else if(n===""){a.push(t),m();return}else t=t+n;else if(o==="after descriptor"&&!e(n))if(n===""){m();return}else o="in descriptor",c-=1;c+=1}}function m(){var i=!1,f,l,v,S,_={},d,L,g,w,D;for(S=0;S<a.length;S++)d=a[S],L=d[d.length-1],g=d.substring(0,d.length-1),w=parseInt(g,10),D=parseFloat(g),A.test(g)&&L==="w"?((f||l)&&(i=!0),w===0?i=!0:f=w):P.test(g)&&L==="x"?((f||l||v)&&(i=!0),D<0?i=!0:l=D):A.test(g)&&L==="h"?((v||l)&&(i=!0),w===0?i=!0:v=w):i=!0;i?console&&console.log&&console.log("Invalid srcset descriptor found in '"+r+"' at '"+d+"'."):(_.url=x,f&&(_.w=f),l&&(_.d=l),v&&(_.h=v),E.push(_))}}})});var p={};K(p,{default:()=>R});var M=F($());h(p,F($()));var{default:j,...Q}=M,R=j!==void 0?j:Q;export{R as default};
//# sourceMappingURL=parse-srcset.mjs.map